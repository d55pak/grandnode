name: DevSecOps
'on':
  push:
    branches:
      - developer
  pull_request:
    branches:
      - developer
  workflow_dispatch: null

jobs:

  check-quality:
    runs-on: ubuntu-latest
    name: checking  code quality
    steps:
    - name: Check code meets quality standards
      id: code-inspector
      uses: codeinspectorio/github-action@master
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        code_inspector_access_key: ${{ secrets.CODE_INSPECTOR_ACCESS_KEY }}
        code_inspector_secret_key: ${{ secrets.CODE_INSPECTOR_SECRET_KEY }}
        min_quality_grade: 'WARNING'
        min_quality_score: '50'
        max_defects_rate: '0.0001'
        max_complex_functions_rate: '0.0001'
        max_long_functions_rate: '0.0001'
        project_name: ''
        max_timeout_sec: '600'


  Secrets_Scan:
    name: SecretsScan-GitGuardian
    runs-on: ubuntu-latest
    needs:
      - check-quality
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: GitGuardian scan
        uses: GitGuardian/gg-shield-action@master
        with:
          args: -v --all-policies --show-secrets 
        env:
          GITHUB_PUSH_BEFORE_SHA: '${{ github.event.before }}'
          GITHUB_PUSH_BASE_SHA: '${{ github.event.base }}'
          GITHUB_PULL_BASE_SHA: '${{ github.event.pull_request.base.sha }}'
          GITHUB_DEFAULT_BRANCH: '${{ github.event.repository.default_branch }}'
          GITGUARDIAN_API_KEY: '${{ secrets.GITGUARDIAN_API_KEY }}'

  Software_Comp_Analysis_Debricked:
    name: Software-Comp-Analysis-Debricked
    runs-on: ubuntu-latest
    needs:
      - Secrets_Scan
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: debricked/actions/scan@v1
        env:
          USERNAME: '${{ secrets.DEBRICKED_USERNAME }}'
          PASSWORD: '${{ secrets.DEBRICKED_PASSWORD }}'


  Software_Comp_Analysis_DepCheck:
    name: Software-Comp-Analysis-OWASPDEPCHECK
    runs-on: ubuntu-latest
    needs:
      - Secrets_Scan
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Download Dep Check tool
      run:  wget https://github.com/jeremylong/DependencyCheck/releases/download/v6.2.2/dependency-check-6.2.2-release.zip
    - name: Install the tool and run it
      run: unzip dependency-check-6.2.2-release.zip && ls -l && dependency-check/bin/dependency-check.sh -s .
        
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
          name: depcheck-artifact
          path: ${{ github.workspace }}     
           
  SAST_Scan-NodeJs:
    name: SAST-Nodejs
    runs-on: ubuntu-latest
    needs:
      - Software_Comp_Analysis_Debricked
      - Software_Comp_Analysis_DepCheck
    steps:
    - name: Checkout the code
      uses: actions/checkout@v2
    - name: nodejsscan scan
      id: njsscan
      uses: ajinabraham/njsscan-action@master
      with:
        args: '. --sarif --output results.sarif || true'
    - name: Upload njsscan report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: results.sarif
    - name: artifacts
      uses: actions/upload-artifact@v2
      with:
          name: nodejs-sast-artifact
          path: ${{ github.workspace }}    
   
        
  Build_Image_Docker:
    name: Build-Push-Image-Docker
    runs-on: ubuntu-latest
    needs:
      - SAST_Scan-NodeJs
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: Build & push Docker image
        with:
          image: test11113423423/grandnode
          tags: 'v1, latest'
          registry: docker.io
          dockerfile: ./Dockerfile
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'
  
